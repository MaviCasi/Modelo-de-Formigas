; === MODELO DE FORMIGAS COLETORAS COM TIPOS DE COMida, PREDADORES E CLIMA ===

; === RAÇAS ==
breed [formigas formiga]
breed [predadores predador]


; === VARIÁVEIS GLOBAIS ===
globals [
  food-carriers
  total-food-collected
  total-acucar
  total-semente
  total-fruta
  clima
  clima-intensidade
  raio-do-ninho
]

; === VARIÁVEIS DOS PATCHES ===
patches-own [
  chemical
  food
  nest?
  nest-scent
  food-source-number
  obstaculo?
  tipo-de-comida
]

; === VARIÁVEIS DAS FORMIGAS ===
formigas-own [
entregas
carregando-comida?
tipo-carregado
carga
capacidade-maxima
papel ; "operaria", "soldado", "rainha"
]

; === VARIÁVEIS DOS PREDADORES ===
predadores-own [
  fome
]

; === SETUP ===

to setup
  clear-all
  set-default-shape formigas "bug"
  set-default-shape predadores "wolf"
  set total-food-collected 0
  set total-acucar 0
  set total-semente 0
  set total-fruta 0
  set raio-do-ninho 5

  create-formigas (population - 5) [
set entregas 0
set size 2
set color red
setxy random-xcor random-ycor
set carregando-comida? false
set tipo-carregado ""
set carga 0
set capacidade-maxima 3
set papel "operaria"
]

create-formigas 4 [
set entregas 0
set size 3.5
set color green ; ← soldados agora são verdes
setxy random-xcor random-ycor
set carregando-comida? false
set tipo-carregado ""
set carga 0
set capacidade-maxima 0
set papel "soldado"
]


create-formigas 1 [
set entregas 0
set size 6
set color brown
setxy 0 0
set carregando-comida? false
set tipo-carregado ""
set carga 0
set capacidade-maxima 0
set papel "rainha"
]


  create-predadores 2[
    set size 4.5
    set color blue
    setxy random-xcor random-ycor
    set fome 0
  ]

  setup-patches

  set clima one-of ["ensolarado" "chuvoso" "nublado" "ventando"]
  set clima-intensidade random-float 1.0

  reset-ticks
  clear-plot
end

to setup-patches
  ask patches [
    set chemical 0
    set food 0
    set food-source-number 0
    set obstaculo? false
    set tipo-de-comida ""
  ]

  let obstaculos patches with [(distancexy 0 0) > 7]
  ask n-of 30 obstaculos [
    set obstaculo? true
  ]

  ask patches [
    setup-nest
    setup-food
    recolor-patch
  ]
end

to setup-nest
  set nest? (distancexy 0 0) < raio-do-ninho
  ifelse nest? [
    set nest-scent 200 - distancexy 0 0
  ] [
    set nest-scent 0
  ]
end

to setup-food
  if (distancexy (0.6 * max-pxcor) 0) < 5 [
    set food-source-number 1
    set food one-of [1 2]
    set tipo-de-comida "açúcar"
  ]
  if (distancexy (-0.6 * max-pxcor) (-0.6 * max-pycor)) < 5 [
    set food-source-number 2
    set food one-of [1 2]
    set tipo-de-comida "semente"
  ]
  if (distancexy (-0.8 * max-pxcor) (0.8 * max-pycor)) < 5 [
    set food-source-number 3
    set food one-of [1 2]
    set tipo-de-comida "fruta"
  ]
end

to recolor-patch
  ifelse obstaculo? [
    set pcolor yellow
  ] [
    ifelse nest? [
      set pcolor violet
    ] [
      ifelse food > 0 [
        if food-source-number = 1 [ set pcolor cyan ]
        if food-source-number = 2 [ set pcolor sky ]
        if food-source-number = 3 [ set pcolor blue ]
      ] [
        set pcolor scale-color green chemical 0.1 5
      ]
    ]
  ]
end

; === EXECUÇÃO PRINCIPAL ===

to go
  atualizar-clima
  atualizar-ninho
  set food-carriers count formigas with [carregando-comida?]



   ask formigas [
if papel = "operaria" [
if clima = "chuvoso" [
if patch-here != patch 0 0 [
face patch 0 0
fd 1
]
]

      if clima != "chuvoso" [
        ifelse not carregando-comida? or carga < capacidade-maxima [
          look-for-food
        ] [
          return-to-nest
        ]
        wiggle
        fd 1
      ]
    ]

    if papel = "soldado" [
      patrulhar
    ]

    if papel = "rainha" [
      gerar-operaria
    ]
      gerar-operaria
    ]


  ask predadores [
    perseguir-formigas
    rt random 30
    lt random 30
    fd 1
  ]

  diffuse chemical (diffusion-rate / 100)

  ask patches [
    set chemical chemical * ((100 - evaporation-rate) / 100)
    recolor-patch
  ]

  ; Gráficos
  set-current-plot "Formigas e Comida"
  set-current-plot-pen "Formigas com comida"
  plot food-carriers

  set-current-plot-pen "Total de comida trazida"
  plot total-food-collected

  set-current-plot "Comida por Tipo"
  set-current-plot-pen "açúcar"
  plot total-acucar
  set-current-plot-pen "semente"
  plot total-semente
  set-current-plot-pen "fruta"
  plot total-fruta
  regenerar-comida
  tick
end

; === CLIMA ===

to atualizar-clima
  if random-float 1.0 < 0.01 [
    set clima one-of ["ensolarado" "chuvoso" "nublado" "ventando"]
    set clima-intensidade random-float 1.0
  ]
end

; === CRESCIMENTO DO NINHO ===

to atualizar-ninho
  let novo-raio (5 + (total-food-collected / 50))
  if novo-raio > raio-do-ninho [
    set raio-do-ninho novo-raio
    ask patches [ setup-nest recolor-patch ]
  ]
end

; === COMPORTAMENTO DAS FORMIGAS ===

to look-for-food
  if food > 0 and (not carregando-comida? or carga < capacidade-maxima) [
    if not carregando-comida? [
      set tipo-carregado tipo-de-comida
      set carregando-comida? true
      set color orange + 2
    ]
    if tipo-carregado = tipo-de-comida and carga < capacidade-maxima [
      set carga carga + 1
      set food food - 1
      if carga = capacidade-maxima [
        rt 180
      ]
      stop
    ]
  ]
  if (chemical >= 0.05) and (chemical < 2) [
    uphill-chemical
  ]
end

to return-to-nest
  if nest? [
    set total-food-collected total-food-collected + carga

    if tipo-carregado = "açúcar" [ set total-acucar total-acucar + carga ]
    if tipo-carregado = "semente" [ set total-semente total-semente + carga ]
    if tipo-carregado = "fruta" [ set total-fruta total-fruta + carga ]

    set carga 0
    set tipo-carregado ""
    set carregando-comida? false
    set color red
    rt 180
    stop
  ]
  set chemical chemical + 60
  uphill-nest-scent
end

; === MOVIMENTAÇÃO ===

to uphill-chemical
  let scent-ahead chemical-scent-at-angle 0
  let scent-right chemical-scent-at-angle 45
  let scent-left chemical-scent-at-angle -45

  if (scent-right > scent-ahead) or (scent-left > scent-ahead) [
    ifelse scent-right > scent-left [
      rt 45
    ] [
      lt 45
    ]
  ]
end

 to uphill-nest-scent
  let scent-ahead nest-scent-at-angle 0
end
 to wiggle
  rt random 40
  lt random 40
  if not can-move? 1 or [obstaculo?] of patch-ahead 1 [
    rt 180
  ]
end

to patrulhar
  if nest? [
    rt random 30
    lt random 30
    fd 1
    let inimigo one-of predadores in-radius 2 with [patch-here = patch 0 0 or [nest?] of patch-here]
    if inimigo != nobody [
      face inimigo
      if distance inimigo < 1 [
        ask inimigo [ die ]
      ]
    ]
  ]

  if not nest? [
    face patch 0 0
    fd 1
  ]
end



to gerar-operaria
  if nest? and total-food-collected > 10 and random-float 1.0 < 0.01 [
    hatch 1 [
      set papel "operaria"
      set shape "bug"
      set color red
      set carregando-comida? false
      set tipo-carregado ""
      set carga 0
      set capacidade-maxima 3
      set size 2
      setxy 0 0
    ]
    set total-food-collected total-food-collected - 5
  ]
end

to perseguir-formigas
  if clima = "chuvoso" and [nest?] of patch-here [
    rt 180
    fd 1
    stop
  ]

  let alvo one-of formigas in-radius 2
  if alvo != nobody [
    face alvo
    if distance alvo < 1 [
      ask alvo [ die ]
    ]
  ]
end

to-report nest-scent-at-angle [angle]
  let p patch-right-and-ahead angle 1
  if p = nobody [ report 0 ]
  report [nest-scent] of p
end

to-report chemical-scent-at-angle [angle]
  let p patch-right-and-ahead angle 1
  if p = nobody [ report 0 ]
  report [chemical] of p
end



; === ADICIONAR PREDADOR ===

to adicionar-predador
  create-predadores 1 [
    set size 5.0
    set color blue
    setxy random-xcor random-ycor
    set fome 0
  ]
end

; === REGENERAÇÃO DE COMIDA ===
to regenerar-comida
  if clima != "chuvoso" [
    ask patches with [food = 0 and not obstaculo? and not nest?] [
      if random-float 1.0 < 0.001 [ ; chance pequena de regenerar
        set food one-of [1 2]
        set tipo-de-comida one-of ["açúcar" "semente" "fruta"]
        set food-source-number one-of [1 2 3]
      ]
    ]
  ]
end

; === AUMENTAR OBSTACULO ===
to aumentar-obstaculos
  let novos-obstaculos patches with [not obstaculo? and not nest?]
  ask n-of 10 novos-obstaculos [
    set obstaculo? true
    recolor-patch
  ]
end